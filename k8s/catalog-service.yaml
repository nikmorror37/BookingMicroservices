apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalog-service
  labels:
    app: catalog-service
spec:
  replicas: 1 # single replica is enough for academic demo; scale via kubectl later
  selector:
    matchLabels:
      app: catalog-service
  template:
    metadata:
      labels:
        app: catalog-service
    spec:
      containers:
      - name: catalog-service
        image: catalogservice:demo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          name: http
        env:
        # Environment parity with docker-compose definition
        - name: ASPNETCORE_ENVIRONMENT
          value: "Development"
        - name: ConnectionStrings__CatalogDb
          value: "Server=host.docker.internal;Database=CatalogDb;User Id=sa;Password=Your_password123;TrustServerCertificate=True;Encrypt=False;"
        - name: EventBus__Host
          value: host.docker.internal
        - name: Jwt__Key
          value: 32plusloooooooongkey_min32symbols
        - name: Jwt__Issuer
          value: IdentityService.API
        - name: Jwt__Audience
          value: BookingService.API
        - name: ASPNETCORE_URLS
          value: "http://+:80"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "250m"
            memory: "256Mi"

---
apiVersion: v1
kind: Service
metadata:
  name: catalog-service
  labels:
    app: catalog-service
spec:
  type: ClusterIP # internal service; expose via Ingress or API Gateway separately
  selector:
    app: catalog-service
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: http 