@model BookingWebApp.Models.HotelDetailsVm
@{
    ViewData["Title"] = Model.Hotel.Name;
    var checkInStr = Model.CheckIn?.ToString("yyyy-MM-dd") ?? string.Empty;
    var checkOutStr = Model.CheckOut?.ToString("yyyy-MM-dd") ?? string.Empty;
}
<div class="mb-4">
  <h2>@Model.Hotel.Name</h2>
  <p>
    @for(int i=0;i<Model.Hotel.Stars;i++){<i class="bi bi-star-fill text-warning"></i>}
    <span class="ms-2">@Model.Hotel.Stars â˜…</span>
  </p>
</div>
@{
    var imgList = new List<string>();
    var baseUrl = "http://localhost:8080";
    if(!string.IsNullOrEmpty(Model.Hotel.ImageUrl))
        imgList.Add(Model.Hotel.ImageUrl.StartsWith("http") ? Model.Hotel.ImageUrl : baseUrl + Model.Hotel.ImageUrl);
    else imgList.Add("/wwwroot/img/placeholder-hotel.jpg");
}
@await Html.PartialAsync("_Gallery", imgList)

<div class="mb-4">
  <h5 class="mb-2">About this hotel</h5>
  <p>@Model.Hotel.Address, @Model.Hotel.City, @Model.Hotel.Country</p>
  <p><i class="bi bi-geo-alt-fill"></i> @Model.Hotel.DistanceFromCenter.ToString("0.#") km to city center</p>
  @if(!string.IsNullOrEmpty(Model.Hotel.Description)){
    <p class="mt-2">@Model.Hotel.Description</p>
  }
</div>
<hr/>
<h4 class="mb-3">Find available rooms</h4>
<form class="row row-cols-lg-auto g-2 align-items-center mb-4">
  <input type="hidden" name="id" value="@Model.Hotel.Id" />
  <div class="col-12">
    <input type="date" id="detailCheckIn" name="checkIn" class="form-control" value="@checkInStr" min="@DateTime.UtcNow.Date.ToString("yyyy-MM-dd")" required />
  </div>
  <div class="col-12">
    <input type="date" id="detailCheckOut" name="checkOut" class="form-control" value="@checkOutStr" min="@DateTime.UtcNow.Date.AddDays(1).ToString("yyyy-MM-dd")" required />
  </div>
  <div class="col-12">
    <button class="btn btn-primary">Search</button>
  </div>
</form>
<script>
 (function(){
   const inEl = document.getElementById('detailCheckIn');
   const outEl = document.getElementById('detailCheckOut');
   if(!inEl||!outEl) return;
   function sync(){
      if(inEl.value){
         const d = new Date(inEl.value);
         d.setDate(d.getDate()+1);
         const minStr = d.toISOString().split('T')[0];
         outEl.min = minStr;
         if(outEl.value && outEl.value <= inEl.value){
            outEl.value = '';
         }
      }
   }
   inEl.addEventListener('change',sync);
   sync();
 })();
</script>
@if(Model.AvailableRooms is not null){
  if(Model.AvailableRooms.Any()){
    ViewBag.CheckIn = checkInStr;
    ViewBag.CheckOut = checkOutStr;
    ViewBag.HotelId = Model.Hotel.Id;
    <div class="row row-cols-1 row-cols-md-2 gy-4">
    @foreach(var r in Model.AvailableRooms){
      <div class="col">
        @await Html.PartialAsync("_RoomCard", r)
      </div>
    }
    </div>
  } else {
    <div class="alert alert-warning">No rooms available for selected dates.</div>
  }
} 