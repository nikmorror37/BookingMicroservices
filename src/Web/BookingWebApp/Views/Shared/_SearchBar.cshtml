@* Reusable search bar: location + date range *@
<form asp-controller="Hotels" asp-action="Index" method="get" class="row g-2 align-items-end bg-light p-3 rounded shadow-sm">
    <div class="col-md-4">
        <label class="form-label">Destination</label>
        <input type="text" name="search" class="form-control" placeholder="City or hotel name" value="@Context.Request.Query["search"]" />
    </div>
    <div class="col-md-2">
        <label class="form-label">Check-in</label>
        <input type="date" id="checkIn" name="checkIn" class="form-control" value="@Context.Request.Query["checkIn"]" min="@DateTime.UtcNow.Date.ToString("yyyy-MM-dd")" />
    </div>
    <div class="col-md-2">
        <label class="form-label">Check-out</label>
        <input type="date" id="checkOut" name="checkOut" class="form-control" value="@Context.Request.Query["checkOut"]" min="@DateTime.UtcNow.Date.AddDays(1).ToString("yyyy-MM-dd")" />
    </div>
    <div class="col-md-2">
        <label class="form-label">Guests</label>
        <select name="guests" class="form-select">
            @for(int g=1; g<=4; g++){
                <option value="@g" selected="@(Context.Request.Query["guests"] == g.ToString() ? "selected" : null)">@g person@(g>1?"s":"")</option>
            }
        </select>
    </div>
    <div class="col-md-2 d-grid">
        <button class="btn btn-primary">Search</button>
    </div>
</form>

<script>
  (function(){
     const inEl = document.getElementById('checkIn');
     const outEl = document.getElementById('checkOut');
     if(!inEl||!outEl) return;
     function setMin(){
        if(inEl.value){
           const d = new Date(inEl.value);
           d.setDate(d.getDate()+1);
           const minStr = d.toISOString().split('T')[0];
           outEl.min = minStr;
           if(outEl.value && outEl.value <= inEl.value){
              outEl.value = '';
           }
        } else {
           outEl.min = '';
        }
     }
     inEl.addEventListener('change', setMin);
     setMin();
  })();
</script> 